apiVersion: apps/v1
kind: Deployment
metadata:
  name: read-deployment
  labels:
    app.kubernetes.io/name: read-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: read-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: read-app
      annotations:  
        dapr.io/app-id: read-app
        dapr.io/app-port: "8080"
        dapr.io/enabled: "true"
    spec:
      containers:
      - name: read-app
        image: salaboy/read-values-beba3afa347547600cf2333694feae38
        env: 
        - name: STATE_STORE_NAME
          value: statestore
        ports: 
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health/readiness
            port: 8080
        readinessProbe:
          httpGet:
            path: /health/liveness
            port: 8080


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: write-deployment
  labels:
    app.kubernetes.io/name: write-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: write-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: write-app
      annotations:  
        dapr.io/app-id: write-app
        dapr.io/app-port: "8080"
        dapr.io/enabled: "true"
        dapr.io/volume-mounts: "wasm-volume:/mnt/wasm"
        dapr.io/config: appconfig
        dapr.io/log-level: debug
    spec:
      volumes:
        - name: wasm-volume
          configMap:
            name: wasm-filter
            items:
              - key: filter.wasm
                path: filter.wasm
      containers:
      - name: write-app
        image: salaboy/write-values-5c7406dd4a3e5fe3dfde887f3959f6e7
        volumeMounts: 
          - name: wasm-volume
            mountPath: /mnt/wasm
        env: 
        - name: STATE_STORE_NAME
          value: statestore
        ports: 
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health/readiness
            port: 8080
        readinessProbe:
          httpGet:
            path: /health/liveness
            port: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: write-app-service
spec:
  selector:
    app.kubernetes.io/name: write-app
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: subcriber-deployment
  labels:
    app.kubernetes.io/name: subcriber-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: subcriber-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: subcriber-app
      annotations:  
        dapr.io/app-id: subcriber-app
        dapr.io/app-port: "8080"
        dapr.io/enabled: "true"
    spec:
      containers:
      - name: subcriber-app
        image: salaboy/subscriber-4a906ae149426dec3141b6935e4b8e2d
        ports: 
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: 8080
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-app-deployment
  labels:
    app.kubernetes.io/name: frontend-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frontend-app
      annotations:  
        dapr.io/app-id: frontend-app
        dapr.io/app-port: "8080"
        dapr.io/enabled: "true"
    spec:
      containers:
      - name: frontend-app
        image: salaboy/frontend-deeb2485154b6af419b6c324ba5571bc
        ports: 
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: 8080
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: frontend-app-service
spec:
  selector:
    app.kubernetes.io/name: frontend-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080